!function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=8)}([function(e,t,r){"use strict";var n=r(3),o=r(1),i=function(e,t,r){var i=o.__SCHEMA.validate(t);t=Object.assign({},o.__DEFAULTS,i.value),e.ext("onPostAuth",function(e,r){if("get"===e.method)return r.continue();var a=e.route.settings.plugins.body;a&&(i=o.__SCHEMA.validate(a),t=Object.assign({},t,i.value));var s=n.type(e.headers["content-type"]).mime;return console.log(s),"multipart/form-data"!==s&&"application/x-www-form-urlencoded"!==s||(console.log("parsing"),o.parse(e,t)),r.continue()}),r()};i.attributes={pkg:r(2)},t.register=i},function(e,t,r){"use strict";var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=r(4),i=r(5),a=r(7),s=r(6);e.exports={__SCHEMA:i.object().keys({parser:i.object(),sanitizer:i.object().keys({trim:i.boolean(),stripNullorEmpty:i.boolean()}).allow(null),payload:i.boolean(),merge:i.boolean()}),__DEFAULTS:{parser:{allowDots:!0,strictNullHandling:!0},sanitizer:{trim:!0,stripNullorEmpty:!0},payload:!1,merge:!0},isObject:function(e){return!(!e||!e.toString||"[object Object]"!==e.toString())},isNullOrUndefined:function(e){return null===e||void 0===e},isEmpty:function(e){return!!this.isNullOrUndefined(e)||/^[\s\xa0]*$/.test(e)},isString:function(e){return"string"==typeof e||!!e&&"object"===(void 0===e?"undefined":n(e))&&"[object String]"===Object.prototype.toString.call(e)},sanitize:function(e,t){if(!this.isObject(e))return e;var r=this;return Object.keys(e).forEach(function(n){var o=e[n];r.isObject(o)?e[n]=r.sanitize(o,t):t.stripNullorEmpty&&r.isNullOrUndefined(o)?delete e[n]:r.isString(o)&&(t.trim&&(e[n]=o=o.trim()),t.stripNullorEmpty&&r.isEmpty(o)&&delete e[n])}),e},parse:function(e,t){var r=s.parse(e.payload,t.parser);if(t.merge){var n=a.parse(e.url,!1),i=s.parse(n.query,t.parser);r=o.merge(i,r)}t.sanitizer&&(r=this.sanitize(r,t.sanitizer)),t.payload&&(e.payload=r),e.body=r}}},function(e,t){e.exports={name:"hapi-bodyparser",version:"1.0.0",description:"Hapi.js body parsing plugin",main:"dist/main.js",scripts:{b:"grunt",build:"grunt"},repository:{type:"git",url:"git+https://github.com/nasa8x/hapi-bodyparser.git"},keywords:["bodyparser","body parser","body parsing","payload parsing","payload parser","hapi","hapi bodyparser","payload"],author:"Nasa8x",license:"MIT",bugs:{url:"https://github.com/nasa8x/hapi-bodyparser/issues"},homepage:"https://github.com/nasa8x/hapi-bodyparser#readme",dependencies:{content:"^3.0.3",hoek:"^4.1.1",joi:"^10.3.4",qs:"^6.4.0"},devDependencies:{"babel-core":"*","babel-loader":"*","babel-plugin-transform-runtime":"*","babel-preset-es2015":"*","babel-preset-stage-2":"*","babel-runtime":"*",grunt:"*","grunt-babel":"*","grunt-contrib-clean":"*","grunt-contrib-watch":"*","grunt-webpack":"*",webpack:"*","webpack-node-externals":"*"},babel:{presets:[["es2015"],["stage-2"]]}}},function(e,t){e.exports=require("content")},function(e,t){e.exports=require("hoek")},function(e,t){e.exports=require("joi")},function(e,t){e.exports=require("qs")},function(e,t){e.exports=require("url")},function(e,t,r){e.exports=r(0)}]);